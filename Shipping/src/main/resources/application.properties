spring.application.name=Shipping

server.port=8082

# Database
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/ordersKafka
spring.datasource.username=postgres
spring.datasource.password=297032
spring.jpa.hibernate.ddl-auto=update

# Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.show_sql=true

# Kafka configuration Producer
# spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Kafka configuration Consumer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=shipping

# Разрешить десериализацию JSON из любых пакетов
spring.kafka.consumer.properties.spring.json.trusted.packages=*